import axios from 'axios';
import { config } from '../config/config';

interface BookingData {
  date: string;
  time: string;
  duration: string;
  guests: string;
  name: string;
  phone: string;
}

export class TelegramService {
  private readonly botToken: string;
  private readonly chatId: string;
  private readonly apiUrl: string;

  constructor() {
    this.botToken = config.telegram.botToken;
    this.chatId = config.telegram.chatId;
    this.apiUrl = `https://api.telegram.org/bot${this.botToken}`;
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('Telegram Service: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');
    console.log('Telegram Service: Bot Token:', this.botToken ? '‚úì –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚úó –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    console.log('Telegram Service: Chat ID:', this.chatId ? '‚úì –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '‚úó –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    console.log('Telegram Service: API URL:', this.apiUrl);
  }

  private formatMessage(data: BookingData): string {
    const date = new Date(data.date).toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    });

    return `üìÖ –ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:\n\n` +
           `–î–∞—Ç–∞: ${date}\n` +
           `–í—Ä–µ–º—è: ${data.time}\n` +
           `–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${data.duration} —á–∞—Å–∞\n` +
           `–ì–æ—Å—Ç–µ–π: ${data.guests}\n\n` +
           `–ò–º—è: ${data.name}\n` +
           `–¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}`;
  }

  async sendMessage(message: string): Promise<void> {
    try {
      await axios.post(`${this.apiUrl}/sendMessage`, {
        chat_id: this.chatId,
        text: message,
        parse_mode: 'HTML'
      });
    } catch (error) {
      console.error('Error sending Telegram message:', error);
      throw error;
    }
  }

  async sendBookingNotification(bookingData: any): Promise<void> {
    const message = `
<b>üéâ –ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!</b>

üìÖ –î–∞—Ç–∞: ${bookingData.date}
‚è∞ –í—Ä–µ–º—è: ${bookingData.time}
‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${bookingData.duration} —á–∞—Å–∞
üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π: ${bookingData.guests}

üë§ –ò–º—è: ${bookingData.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${bookingData.phone}
    `;

    await this.sendMessage(message);
  }
} 